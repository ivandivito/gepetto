
.CSEG

.DEF TEMP_1 = R16
.DEF TEMP_2 = R17

IDLE_RUN:
	
	;Procesar buffer GRBL
	
	;Verificar si termina en \n
	POINT_Y_TO_END_OF_BUFFER GRBL_BUFFER, GRBL_BUFFER_POINTER
	
	LD TEMP_1, Y
	
	CPI TEMP_1, '\n'
	BRNE IDLE_GRBL_CONTINUE
		
		RCALL IDLE_GRBL_PROCESS_LINE
	
	IDLE_GRBL_CONTINUE:
	
	;Si hay cambio de estado terminar
	LDS TEMP_1, CURRENT_STATE
	CPI TEMP_1, STATE_IDLE
	BRNE IDLE_END

	;Verificar connección PC
	
	;Verificar si termina en \n
	POINT_Y_TO_END_OF_BUFFER USB_BUFFER, USB_BUFFER_POINTER
	
	LD TEMP_1, Y
	
	CPI TEMP_1, '\n'
	BRNE IDLE_USB_CONTINUE
	
		RCALL IDLE_USB_PROCESS_LINE
	
	IDLE_USB_CONTINUE:
	
	.DEF GGR_REG = R11
	.DEF BUTTONS_REG = R10
	
	;Procesar botones
	CALL BUTTONS_READ
	MOV BUTTONS_REG, R16
	
	LDS GGR_REG, GGR
	
	ANDI R16, (1<<BUTTONS_CHANGE) ; Si es el boton de cambiar
	BREQ IDLE_TEST_CONFIRM
	MOV R17, GGR_REG
	ANDI R17, (1<<UC) ;Si hay conneccion
	BREQ IDLE_TEST_CONFIRM
	
		LDI R16, (1<<UIS)
		EOR R11, R16 ;Invertir estado de UI
		STS GGR, R11 ;Guardar
		
		RJMP IDLE_BUTTONS_CONTINUE
	IDLE_TEST_CONFIRM:
	
	MOV R16, BUTTONS_REG
	ANDI R16, (1<<BUTTONS_CHANGE) ; Si es el boton de confirmar
	BREQ IDLE_BUTTONS_CONTINUE
		
		MOV R17, GGR_REG
		ANDI R17, (1<<UIS) ;Verificar estado
		BREQ IDLE_GO_TO_RUNNING
			
			LDI R17, STATE_CONNECTED ;Ir a STATE_CONNECTED
			STS CURRENT_STATE, R17
			
			RJMP IDLE_END
			
		IDLE_GO_TO_RUNNING:
		
		
	IDLE_BUTTONS_CONTINUE:
	
	;Actualizar UI
	
	IDLE_END:

	RET


;Subrutina para procesar una linea de GRBL

IDLE_GRBL_PROCESS_LINE:
	
	;Comparar con error

	LDI XL, LOW(GRBL_BUFFER)
	LDI XH, HIGH(GRBL_BUFFER)

	LDI ZL, LOW(GRBL_ERROR<<1)
	LDI ZH, HIGH(GRBL_ERROR<<1)

	CALL STRING_COMPARE_P

	BREQ IDLE_GRBL_PROCESS_CONTINUE

		LDI TEMP_1, STATE_ERROR
		STS CURRENT_STATE, TEMP_1

	IDLE_GRBL_PROCESS_CONTINUE:

	BUFFER_CLEAR GRBL_BUFFER_POINTER

	RET


;Subrutina para procesar una linea de GRBL

.DEF TEMP = R16

IDLE_USB_PROCESS_LINE:
	
	;Comparar con tick

	LDI XL, LOW(USB_BUFFER)
	LDI XH, HIGH(USB_BUFFER)

	LDI ZL, LOW(USB_TICK<<1)
	LDI ZH, HIGH(USB_TICK<<1)

	CALL STRING_COMPARE_P

	BREQ IDLE_USB_PROCESS_CONTINUE
		
		;Setear flag de conección
		LDS TEMP, GGR
		ORI TEMP, (1<<UC)
		STS GGR, TEMP

	IDLE_USB_PROCESS_CONTINUE:
	
	CALL USB_CHECK_TIMEOUT
	
	BREQ IDLE_USB_NO_TIMEOUT
		
		;Setear flag de conección
		LDS TEMP, GGR
		ANDI TEMP, ~(1<<UC)
		STS GGR, TEMP
		
	IDLE_USB_NO_TIMEOUT:
	
	BUFFER_CLEAR USB_BUFFER_POINTER

	RET
	